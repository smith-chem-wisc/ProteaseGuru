<Window x:Class="GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GUI"
        xmlns:Controls="clr-namespace:ProteaseGuruGUI"
        mc:Ignorable="d"
        Drop="Window_Drop" AllowDrop="true" 
        WindowStartupLocation="CenterScreen"
        Icon="proteaseGuru.ico"
        Title="ProteaseGuru" Height="600" Width="1300">
    <Window.Resources>
        <ResourceDictionary>

            <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            </Style>

            <!--Styling for the context menu to add tasks-->
            <Style x:Key="ContextMenuStyle" TargetType="ContextMenu">
                <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor1}"/>
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border BorderThickness="1" BorderBrush="{StaticResource BorderColor}" x:Name="Border" 
                                    Background="{StaticResource BackgroundColor}">
                                <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColor}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Defines the context menu when a protein database is right-clicked-->
            <ContextMenu x:Key="ProteinDatabaseContextMenu" Style="{StaticResource ContextMenuStyle}">

            </ContextMenu>

            <!--Styles the protein DB datagrid items-->
            <Style x:Key="DatabaseDataGridItemStyle" TargetType="DataGridRow">
                <Setter Property="ContextMenu" Value="{StaticResource ProteinDatabaseContextMenu}" />
            </Style>

            



            <!--Styling for the tab items on the left side-->
            <Style x:Key="TabItemStyle" TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Height="55" Width="165" Background="{StaticResource SideBarMainColor}">
                                <Border Name="Border" Margin="0,0,0,0" Background="Transparent"
                                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
                                    <ContentPresenter 
                                                x:Name="ContentSite" 
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                ContentSource="Header" Margin="5,2,10,2"
                                                RecognizesAccessKey="True">
                                    </ContentPresenter>
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderThickness" Value="0,0,7,0"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <!--Color of tab item text (when selected)-->
                                    <Setter Property="Foreground" Value="{StaticResource TextColor2}"/>
                                    <!--Color of tab item right side (when selected)-->
                                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="False">
                                    <!--Color of tab item text (when deselected)-->
                                    <Setter Property="Foreground" Value="{StaticResource TextColor2}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0,0,2,0" />
                <Setter Property="Padding" Value="0" />
            </Style>
            <Style x:Key="SpacerTabItemStyle" TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Height="20" Width="125" Background="{StaticResource SideBarMainColor}">
                                <Border Name="Border" Margin="0,0,0,0" Background="Transparent"
                                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
                                    <ContentPresenter 
                                                x:Name="ContentSite" 
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                ContentSource="Header" Margin="5,2,10,2"
                                                RecognizesAccessKey="True">
                                    </ContentPresenter>
                                </Border>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0,0,2,0" />
                <Setter Property="Padding" Value="0" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TabControl Grid.ColumnSpan="4" TabStripPlacement="Left" BorderThickness="0" BorderBrush="{StaticResource BorderColor}">
            <TabControl.Resources>
                <Style TargetType="Grid">
                    <!--This defines the *default* style for *all grids in the entire tab control*-->
                    <!--This is not great but seems necessary to have a proper background on the tab items...-->
                    <Setter Property="Background" Value="{StaticResource SideBarMainColor}" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="About" Style="{StaticResource TabItemStyle}">
                <Grid  Background="{StaticResource DataGridBackgroundColor}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="41*"/>
                        <RowDefinition Height="462*"/>
                    </Grid.RowDefinitions>

                    <!--Header label-->
                    <Label Content="About" Grid.Row="0" FontSize="25" FontWeight="Bold"/>

                    <!--Text content-->
                    <TextBlock Grid.Row="2" Grid.RowSpan="2" Style="{StaticResource TextBlockStyle}"> 
                       
                        ProteaseGuru is a in silico digestion program facilitating the comparison of proteolytic digests. It accepts protein databases (.xml or .fasta) as input and allows
                        <LineBreak />
                         users to set digestion conditions and proteases for digestion. ProteaseGuru is designed to help users determine which protease or combination of proteases would yield the best experimental results.
                        
                        
                        <LineBreak />
                        <LineBreak />
                        <LineBreak />
                        ProteaseGuru is especially helpful for the planning of the following experiment types:
                        <LineBreak />                        
                        <LineBreak />
                        ● Experiments targeting specific proteins.
                        <LineBreak />                        
                        <LineBreak />
                        ● Experiments focusing on the discovery of PTMs and/or sequence variants.
                        <LineBreak />                        
                        <LineBreak />
                        ● Experiments where the sample is composed of more than one species with sequence homology (e.g. xenografts).
                        
                        
                        <LineBreak/>
                        <LineBreak />
                        <LineBreak />
                        ProteaseGuru provides:
                        <LineBreak />                        
                        <LineBreak />
                        ● The ability to analyze more than one database enabling its use with samples containing multiple species .
                        <LineBreak />                        
                        <LineBreak />
                        ● Result files containing various biophysical properties of theoretical peptides such as their molecular weight,
                        <LineBreak />
                        hydrophobicity and electrophoretic mobility.
                        <LineBreak />
                        <LineBreak />
                        ● Determination of the uniqueness of a theoretical sequence (both in a single database and all databases used for analysis).
                        <LineBreak /> 
                        <LineBreak />
                        ● Histograms of whole proteome proteolytic digests for the direct comparison of proteases.
                        <LineBreak /> 
                        <LineBreak />
                        ● Protein sequence coverage maps for visualization of the in silico digestion of targeted proteins.
                    </TextBlock>
                </Grid>
            </TabItem>

            <TabItem Header="Databases" Style="{StaticResource TabItemStyle}">
                <Grid Style="{StaticResource PageGridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <!--Header label-->
                    <Label Content="Protein Databases" Grid.Row="0" Style="{StaticResource HeaderLabelStyle}" />

                    <!--Detail text-->
                    <TextBlock Grid.Row="1" Style="{StaticResource TextBlockStyle}">
                        Add 
                        
                        <Hyperlink NavigateUri="https://www.uniprot.org/" RequestNavigate="Hyperlink_RequestNavigate">
                            protein database(s)
                        </Hyperlink> 
                        
                        in .xml or .fasta format. Databases in .xml format can contain post-translational modification (PTM) locations,
                        whereas .fasta format only contains amino acid sequences.
                    </TextBlock>

                    <DataGrid Grid.Row="2" x:Name="dataGridProteinDatabases"  Style="{StaticResource x:DataGridStyle}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" ItemsSource="{Binding}">

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DatabaseDataGridItemStyle}" />
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}" />
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="File" Binding="{Binding FileName, Mode=OneWay}" Width="450" />
                            <DataGridTextColumn Header="File Path" Binding="{Binding FilePath, Mode=OneWay}" Width="450" />

                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="3" Style="{StaticResource InternalGridStyle}" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" x:Name="AddXML" Width ="200" Height="35" Content="Add" Click="AddProteinDatabase_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Right"/>
                        <Button Grid.Column="2" x:Name="ClearXML" Width="200" Height="35" Content="Clear" Click="ClearXML_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Left"/>
                    </Grid>
                </Grid>

            </TabItem>

            <TabItem Header="Digestion Conditions" Style="{StaticResource TabItemStyle}">
                <Grid Style="{StaticResource PageGridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="25"></RowDefinition>
                        <RowDefinition Height="35"></RowDefinition>
                        <RowDefinition Height="1.2*"></RowDefinition>
                        <RowDefinition Height="35"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="35"></RowDefinition>
                    </Grid.RowDefinitions>

                    <!--Header label-->
                    <Label Content="Digestion Conditions" Grid.Row="0" Style="{StaticResource HeaderLabelStyle}" />

                    <!--Detail text-->
                    <TextBlock Grid.Row="1" Style="{StaticResource TextBlockStyle}">
                        Set the proteases and digestion parameters to use for the in silico analysis.
                    </TextBlock>

                    <!--SubHeader label-->
                    <Label Content="Proteases" Grid.Row="2" Style="{StaticResource SubHeaderLabelStyle}" />


                    <Grid Grid.Row="3" Background="{StaticResource DataGridBackgroundColor}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" Grid.Row="0" PreviewMouseWheel="HandlePreviewMouseWheel">
                            <ListBox Name ="ProteaseSelectedForUse" SelectionMode="Multiple" ItemContainerStyle="{StaticResource ListBoxItem}">
                            </ListBox>
                        </ScrollViewer>
                        <Grid Grid.Row="5" Style="{StaticResource InternalGridStyle}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" x:Name="defaultProteasesButton" Content="Default Proteases" Click="SelectDefaultProteases_Click" Style="{StaticResource ImportantButtonStyle}"/>
                            <Button  Grid.Column="3" x:Name="clearProteasesButton" Content="Clear Protease Selection" Click="ClearSelectedProteases_Click" Style="{StaticResource ImportantButtonStyle}"/>
                            <Button  Grid.Column ="5" x:Name="addCustomProteasesButton" Content="Add Custom Protease" Click="AddCustomProtease_Click" Style="{StaticResource ImportantButtonStyle}"/>

                        </Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="5" Background="{StaticResource DataGridBackgroundColor}">

                        </StackPanel>
                    </Grid>

                    <!--Header label-->
                    <Label Content="Parameters" Grid.Row="4" Style="{StaticResource SubHeaderLabelStyle}" />

                    <Grid Grid.Row="5" Background="{StaticResource DataGridBackgroundColor}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Background="{StaticResource DataGridBackgroundColor}">
                            <Grid Background="{StaticResource DataGridBackgroundColor}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="330"/>
                                    <ColumnDefinition Width="330"/>

                                </Grid.ColumnDefinitions>
                                <!-- Max missed cleavages -->
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="0" Grid.Row="1">
                                    <Label x:Name="maxMissedCleavagesLabel" Content="Max Missed Cleavages:" Width="150" />
                                    <TextBox x:Name="MissedCleavagesTextBox" PreviewTextInput="CheckIfNumber" Width="45">
                                        <TextBox.ToolTip>
                                            <TextBlock>
                                    Maximum number of missed proteolytic cleavages allowed.
                                    <LineBreak />
                                    Semi-specific cleavages do not count toward this.
                                            </TextBlock>
                                        </TextBox.ToolTip>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                                <Style.Resources>
                                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                        <VisualBrush.Visual>
                                                            <Label Content="2" Foreground="Gray" Background="White" Width="45" Height="35"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Style.Resources>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>

                                <!-- Min peptide lengths -->
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="0" Grid.Row="2" Background="{StaticResource DataGridBackgroundColor}">
                                    <Label x:Name="lblMinPeptideLength" Content="Min Peptide Length:" Width="150" />
                                    <TextBox x:Name="MinPeptideLengthTextBox" PreviewTextInput="CheckIfNumber" Width="45" ToolTipService.ShowDuration="999999" ToolTipService.InitialShowDelay="500">
                                        <TextBox.ToolTip>
                                            <TextBlock>
                                                    The minimum allowed peptide length. Must be a positive, non-zero integer.
                                            </TextBlock>
                                        </TextBox.ToolTip>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                                <Style.Resources>
                                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                        <VisualBrush.Visual>
                                                            <Label Content="7" Foreground="Gray" Background="White" Width="45" Height="35"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Style.Resources>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>

                                <!-- Max peptide lengths -->
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="0" Grid.Row="3" Background="{StaticResource DataGridBackgroundColor}">
                                    <Label x:Name="lblMaxPeptideLength" Content="Max Peptide Length:" Width="150" />
                                    <TextBox x:Name="MaxPeptideLengthTextBox" PreviewTextInput="CheckIfNumber" Width="45">
                                        <TextBox.ToolTip>
                                            <TextBlock>
                                                    The maximum allowed peptide length. Leave empty for no limitation.
                                            </TextBlock>
                                        </TextBox.ToolTip>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                                <Style.Resources>
                                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                        <VisualBrush.Visual>
                                                            <Label Content="50" Foreground="Gray" Background="White" Width="45" Height="35"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Style.Resources>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="0" Grid.Row="4" Background="{StaticResource DataGridBackgroundColor}">
                                    <CheckBox x:Name="ModPepsAreUnique" Content="Treat modified peptides as different peptides" IsEnabled="{Binding IsChecked, ElementName=CheckBoxParsimony}">
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="Modified forms of a peptide base sequence are treated as different"  ToolTipService.ShowDuration="999999" ToolTipService.InitialShowDelay="500" />
                                        </ToolTipService.ToolTip>
                                    </CheckBox>
                                </StackPanel>
                                <!-- Min peptide mass -->
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="1" Grid.Row="1" Background="{StaticResource DataGridBackgroundColor}">
                                    <Label x:Name="lblMinPeptideMass" Content="Min Peptide Mass:" Width="150" />
                                    <TextBox x:Name="MinPeptideMassTextBox" PreviewTextInput="CheckIfNumber" Width="45">
                                        <TextBox.ToolTip>
                                            <TextBlock>
                                                    Optional: The minimum allowed peptide mass. Leave empty for no limitation.
                                            </TextBlock>
                                        </TextBox.ToolTip>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">                                                
                                                <Style.Triggers>                                                    
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <!-- Max peptide mass -->
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="1" Grid.Row="2" Background="{StaticResource DataGridBackgroundColor}">
                                    <Label x:Name="lblMaxPeptideMass" Content="Max Peptide Mass:" Width="150" />
                                    <TextBox x:Name="MaxPeptideMassTextBox" PreviewTextInput="CheckIfNumber" Width="45">
                                        <TextBox.ToolTip>
                                            <TextBlock>
                                                    Optional: The maximum allowed peptide mass. Leave empty for no limitation.
                                            </TextBlock>
                                        </TextBox.ToolTip>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">                                               
                                                <Style.Triggers>
                                                   
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="1" Grid.Row="3" Background="{StaticResource DataGridBackgroundColor}">
                                    <CheckBox x:Name="FixedCarbamido" Content="Apply Fixed Carbamidomethylation of C" IsEnabled="{Binding IsChecked, ElementName=CheckBoxParsimony}">
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="All Cysteines will be treated as if they were carbamidomathylated"  ToolTipService.ShowDuration="999999" ToolTipService.InitialShowDelay="500" />
                                        </ToolTipService.ToolTip>
                                    </CheckBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5 5 5 0" Grid.Column="1" Grid.Row="4" Background="{StaticResource DataGridBackgroundColor}">
                                    <CheckBox x:Name="VariableOx" Content="Apply Variable Oxidation of M" IsEnabled="{Binding IsChecked, ElementName=CheckBoxParsimony}">
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="All Methionines will be treated as oxidized and un-oxidized generating two peptides will differeing base sequences"  ToolTipService.ShowDuration="999999" ToolTipService.InitialShowDelay="500" />
                                        </ToolTipService.ToolTip>
                                    </CheckBox>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="6" Style="{StaticResource InternalGridStyle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" x:Name="AddDigestionTask" Content="Save Digestion Conditions" Click="AddDigestionTask_Click" Width="300" HorizontalAlignment="Right" Style="{StaticResource ImportantButtonStyle}"></Button>
                        <Button Grid.Column="2" x:Name="ResetDigestionTask" Content="Reset Digestion Conditions" Click="ResetDigestionTask_Click" Width="300" HorizontalAlignment="Left" Style="{StaticResource ImportantButtonStyle}"></Button>
                    </Grid>

                </Grid>
            </TabItem>

            <TabItem Header="Run" Style="{StaticResource TabItemStyle}" Selector.Selected="OnRunTabSelection">
                <Grid Style="{StaticResource PageGridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height="2.7*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="2"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <!--Header label-->
                    <Label Content="Run Summary" Grid.Row="0" Style="{StaticResource HeaderLabelStyle}" />

                    <!--Detail text-->
                    <TextBlock Grid.Row="1" Style="{StaticResource TextBlockStyle}">
                       Summary of the databases, proteases and conditions that will be used for analysis.
                        <LineBreak/>
                        If everything looks good, hit RUN!
                    </TextBlock>


                    <Grid Grid.Row="2" Background="{StaticResource BackgroundColor}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <TreeView BorderThickness="0" x:Name="RunSummaryTreeView" ItemsSource="{Binding}" DataContext="{x:Type local:RunSummaryForTreeView}" Grid.ColumnSpan="4">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:RunSummaryForTreeView}" ItemsSource="{Binding Summary}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DisplayName}" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:CategorySummaryForTreeView}" ItemsSource="{Binding Summary}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DisplayName}"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <DataTemplate DataType="{x:Type local:FeatureForTreeView}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DisplayName}" />
                                    </StackPanel>
                                </DataTemplate>
                            </TreeView.Resources>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding Expanded}"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </Grid>

                        <Grid Grid.Row="3" Background="{StaticResource DataGridBackgroundColor}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="35"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".75*"/>
                                <ColumnDefinition Width=".25*"/>
                            </Grid.ColumnDefinitions>

                            <DockPanel Margin="5" Grid.Row="2" LastChildFill="True" Grid.ColumnSpan="2">
                                <Button x:Name="OpenOutputFolderButton" Content="Open" Width="40" DockPanel.Dock="Right" Click="OpenOutputFolder_Click" Style="{StaticResource ImportantButtonStyle}"></Button>
                                <Label Content="Output Folder:"/>
                                <TextBox x:Name="OutputFolderTextBox"/>
                            </DockPanel>
                            <Button x:Name="RunTaskButton" Content="Run!" Click="RunTaskButton_Click" FontSize="24" Grid.Row="3" Grid.ColumnSpan="2" Width="400" Style="{StaticResource ImportantButtonStyle}"/>
                            
                        </Grid>
                    <Grid Grid.Row="5" Background="{StaticResource BackgroundColor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StatusBar Name="RunStatus" Grid.Column="0" Background="{StaticResource BackgroundColor}">
                            <StatusBarItem>
                                <TextBlock Style="{StaticResource StatusBarTextStyle}">Running:</TextBlock>
                            </StatusBarItem>
                        </StatusBar>
                        <DockPanel Margin="5" Grid.Column="1">
                            <Label Content="Run Status:" Style="{StaticResource ProgressTextStyle}"/>
                            <TextBox x:Name="ProgressTextBox"  Background="{StaticResource BackgroundColor}" BorderThickness="0"/>
                        </DockPanel>
                        
                    </Grid>
                   
                   
                </Grid>
            </TabItem>
            <TabItem Header="Load Previous Results" Style="{StaticResource TabItemStyle}" Name="LoadTab">
                <Grid Style="{StaticResource PageGridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="37"/>
                        <RowDefinition Height="90"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="63"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="90"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height=" 2"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height=" 2"/>
                    </Grid.RowDefinitions>

                    <!--Header label-->
                    <Label Content="Load Protease Guru Results" Grid.Row="0" Style="{StaticResource HeaderLabelStyle}" />

                    <!--Detail text-->
                    <TextBlock Grid.Row="1" Style="{StaticResource TextBlockStyle}">
                        Load in previous ProteaseGuru result files to go straight to data visualization.
                    </TextBlock>

                    <!--Header label-->
                    <Label Content="Databases" Grid.Row="2" Style="{StaticResource SubHeaderLabelStyle}" />

                    <DataGrid Grid.Row="3" x:Name="dataGridReloadDb"  Style="{StaticResource x:DataGridStyle}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible">

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DatabaseDataGridItemStyle}" />
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}" />
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="File" Binding="{Binding FileName, Mode=OneWay}" Width="450" />
                            <DataGridTextColumn Header="File Path" Binding="{Binding FilePath, Mode=OneWay}" Width="450" />

                        </DataGrid.Columns>
                    </DataGrid>


                    <Grid Grid.Row="4" Style="{StaticResource InternalGridStyle}" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="28*"/>
                            <ColumnDefinition Width="145*"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="173*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" x:Name="AddDb" Width ="200" Height="25" Content="Add" Click="ReloadProteinDatabase_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Left" Margin="234,0,0,0"/>
                        <Button Grid.Column="2" x:Name="ClearDb" Width="200" Height="25" Content="Clear" Click="ClearReloadedXML_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Left" Grid.ColumnSpan="2" Margin="2,0,0,0"/>
                    </Grid>

                    <!--Header label-->
                    <Label Content="Digestion Parameters File" Grid.Row="5" Style="{StaticResource SubHeaderLabelStyle}" />

                    <DataGrid Grid.Row="6" x:Name="dataGridParameters"  Style="{StaticResource x:DataGridStyle}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" ItemsSource="{Binding}" ScrollViewer.VerticalScrollBarVisibility="Visible">

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DatabaseDataGridItemStyle}" />
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}" />
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="File" Binding="{Binding FileName, Mode=OneWay}" Width="450" />
                            <DataGridTextColumn Header="File Path" Binding="{Binding FilePath, Mode=OneWay}" Width="450" />

                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="7" Style="{StaticResource InternalGridStyle}" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="28*"/>
                            <ColumnDefinition Width="145*"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="173*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" x:Name="AddParameters" Width ="200" Height="25" Content="Add" Click="AddParameters_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Left" Margin="234,0,0,0"/>
                        <Button Grid.Column="2" x:Name="ClearParameters" Width="200" Height="25" Content="Clear" Click="ClearParameters_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Left" Grid.ColumnSpan="2" Margin="2,0,0,0"/>
                    </Grid>

                    <!--Header label-->
                    <Label Content="Result Files" Grid.Row="8" Style="{StaticResource SubHeaderLabelStyle}" />

                    <DataGrid Grid.Row="9" x:Name="dataGridResults"  Style="{StaticResource x:DataGridStyle}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" ItemsSource="{Binding}" ScrollViewer.VerticalScrollBarVisibility="Visible">

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DatabaseDataGridItemStyle}" />
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}" />
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="File" Binding="{Binding FileName, Mode=OneWay}" Width="450" />
                            <DataGridTextColumn Header="File Path" Binding="{Binding FilePath, Mode=OneWay}" Width="450" />

                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="10" Style="{StaticResource InternalGridStyle}" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" x:Name="AddResults" Width ="200" Height="25" Content="Add" Click="AddResults_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Right"/>
                        <Button Grid.Column="2" x:Name="ClearResults" Width="200" Height="25" Content="Clear" Click="ClearResults_Click" Style="{StaticResource ImportantButtonStyle}" HorizontalAlignment="Left"/>
                    </Grid>
                    <Button Grid.Row="12" x:Name="LoadResults" Width="402" Height="40" Content="Load Results" Click="LoadResults_Click" Style="{StaticResource ImportantButtonStyle}"/>
                </Grid>
            </TabItem>
            <TabItem  IsHitTestVisible="False" Style="{StaticResource TabItemStyle}">

            </TabItem>

            <TabItem Header="Results Summary" Style="{StaticResource TabItemStyle}" Name="AllResultsTab">
                <Controls:AllResultsWindow/>
            </TabItem>

            <TabItem Header="Histograms" Style="{StaticResource TabItemStyle}" Name="AllHistogramsTab">
                <Controls:HistogramWindow/>
            </TabItem>

            <TabItem Header="Protein Search" Style="{StaticResource TabItemStyle}" Name="ProteinCovMap">
                <Controls:ProteinResultsWindow/>
            </TabItem>

            <TabItem Header="Help" Style="{StaticResource TabItemStyle}">
                <Grid Style="{StaticResource PageGridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <!--Header label-->
                    <Label Content="Help" Grid.Row="0" Style="{StaticResource HeaderLabelStyle}" />

                    <TextBlock Grid.Row="2" Style="{StaticResource TextBlockStyle}">
                        Please visit our 
                        <Hyperlink NavigateUri="https://github.com/smith-chem-wisc/ProteaseGuru/wiki" RequestNavigate="Hyperlink_RequestNavigate">
                            wiki
                        </Hyperlink>  
                        to find answers to commonly-asked questions.
                        
                        <LineBreak/>
                        <LineBreak/>
                        
                        If you encounter problems or you have a suggestion, please visit  
                        <Hyperlink NavigateUri="https://github.com/smith-chem-wisc/ProteaseGuru/issues/new" RequestNavigate="Hyperlink_RequestNavigate">
                            our issues page
                        </Hyperlink> 
                        on GitHub and submit a new issue. 
                        
                        <LineBreak/>
                        <LineBreak/>
                        
                        If you would prefer to keep your correspondence private, you may email us at 
                        <Hyperlink NavigateUri="null" RequestNavigate="MenuItem_EmailHelp_Click">
                           smith_software@chem.wisc.edu
                        </Hyperlink>.
                    </TextBlock>

                    <Grid Grid.Row="3" Style="{StaticResource PageGridStyle}" Margin="5,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="330"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBlockStyle}" Margin="0">
                            You may also want to:
                        </TextBlock>                        
                        
                        <Button Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Left" BorderThickness="0" Click="MenuItem_Twitter_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Twitter_Logo_Blue.bmp" Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Follow us on Twitter" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>

                        <!--<Button Grid.Row="2" Grid.Column="1" HorizontalContentAlignment="Left" BorderThickness="0" Click="MenuItem_YouTube_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/youtube_20.bmp" Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Watch YouTube help videos" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>-->

                        <Button Grid.Row="2" Grid.Column="1" HorizontalContentAlignment="Left" BorderThickness="0" Click="MenuItem_MetaMorpheus_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/MMnice.bmp" Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Search proteomic data with MetaMorpheus" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>

                        <Button Grid.Row="3" Grid.Column="1" HorizontalContentAlignment="Left" BorderThickness="0" Click="MenuItem_Spritz_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Create sample-specific database with Spritz" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>

                        <Button Grid.Row="4" Grid.Column="1" HorizontalContentAlignment="Left" BorderThickness="0" Click="MenuItem_ProteomicsNewsBlog_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Blogger_20.bmp" Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Read News in Proteomics Research" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Grid>

                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
